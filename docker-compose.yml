version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: arizona-plants-qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC API
    volumes:
      - ./qdrant_storage:/qdrant/storage  # Persist data
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    networks:
      - arizona-plants-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app/assistant-app
    container_name: arizona-plants-api
    ports:
      - "8000:8000"  # API
    volumes:
      - model_cache:/root/.cache/huggingface  # Cache embedding models
      - model_cache_torch:/root/.cache/torch  # Cache PyTorch models
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QDRANT_URL=http://qdrant:6333
      - COLLECTION_NAME=arizona_plants
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - HF_HOME=/root/.cache/huggingface  # HuggingFace cache location
    depends_on:
      qdrant:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - arizona-plants-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  arizona-plants-network:
    driver: bridge

volumes:
  qdrant_storage:
    driver: local
  model_cache:
    driver: local
  model_cache_torch:
    driver: local